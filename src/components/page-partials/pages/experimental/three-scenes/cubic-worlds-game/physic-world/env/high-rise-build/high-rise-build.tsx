/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import { useGLTF } from "@react-three/drei";
import { JSX, useMemo } from "react";
import { publicModelPath } from "../../../config/3d-model.config";
import { Mesh, MeshStandardMaterial } from "three";
import { interactionGroups, RigidBody } from "@react-three/rapier";
import { FrontBuildColliderModel } from "./colliders/front-build-collider";
import { CollisionWorldType } from "../../../../config/collision";
import DoorHouse from "./door-house/door-house";
import Stairs from "./stairs";
import Corridor from "./corridor/corridor";

type Props = JSX.IntrinsicElements["group"] & {};

const path = publicModelPath("high_rise_build.glb");
export default function HighRiseBuild({ ...props }: Props) {
  const { nodes, materials } = useGLTF(path);

  const { facadeFlr1, facadeFlr7, mask } = useMemo(() => {
    const m1 = (
      materials["Brownstone_Facade_Flr_1.001"] as MeshStandardMaterial
    ).clone();
    m1.color.multiplyScalar(7.4);
    const m7 = (
      materials["Brownstone_Facade_FLR_7.001"] as MeshStandardMaterial
    ).clone();
    m7.color.multiplyScalar(4.4);
    const mask = (
      materials["Brownstone_Maskedstuff_1.002"] as MeshStandardMaterial
    ).clone();
    mask.color.multiplyScalar(4.4);
    return { facadeFlr1: m1, facadeFlr7: m7, mask };
  }, [materials]);
  return (
    <>
      <group {...props} dispose={null} frustumCulled={true}>
        <FrontBuildColliderModel />
        <Corridor position={[0, 0.45, 0]} />
        <Stairs position={[0, 0.5, 0]} />
        <group position={[-0.003, -25.458, 10.826]} scale={1.56}>
          <mesh
            castShadow
            receiveShadow
            geometry={(nodes.Mesh015 as Mesh).geometry}
            material={facadeFlr1}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={(nodes.Mesh015_1 as Mesh).geometry}
            material={facadeFlr7}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={(nodes.Mesh015_2 as Mesh).geometry}
            material={mask}
          />
        </group>
        <group position={[-0.003, -25.458, 10.826]} scale={1.56}>
          <RigidBody
            type="fixed"
            colliders="cuboid"
            position={[6.381, 1, 9.85]}
            collisionGroups={interactionGroups(CollisionWorldType.doorFrame)}
          >
            <mesh material-visible={false}>
              <boxGeometry args={[0.03, 1.6, 0.03]} />
            </mesh>
          </RigidBody>
          <mesh
            castShadow
            receiveShadow
            geometry={(nodes.Mesh017 as Mesh).geometry}
            material={facadeFlr1}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={(nodes.Mesh017_1 as Mesh).geometry}
            material={facadeFlr7}
          />
        </group>

        <group position={[8.686, -25.285, 26.141]} scale={[1.58, 1.43, 1.5]}>
          <mesh
            castShadow
            receiveShadow
            geometry={(nodes.Mesh018 as Mesh).geometry}
            material={facadeFlr1}
          />

          <DoorHouse
            geometry={(nodes.Mesh018_1 as Mesh).geometry}
            material={facadeFlr7}
          />
        </group>
        <group position={[11.205, -25.285, 26.141]} scale={[1.58, 1.43, 1.5]}>
          <mesh
            castShadow
            receiveShadow
            geometry={(nodes.Mesh019 as Mesh).geometry}
            material={facadeFlr1}
          />
          <DoorHouse
            geometry={(nodes.Mesh019_1 as Mesh).geometry}
            material={facadeFlr7}
          />
        </group>
        <RigidBody type="fixed" colliders="cuboid">
          <mesh
            castShadow
            receiveShadow
            geometry={(nodes.left_side_build as Mesh).geometry}
            material={facadeFlr1}
            position={[-0.003, -25.458, 10.826]}
            scale={1.56}
          />
        </RigidBody>
        <RigidBody type="fixed" colliders="cuboid">
          <mesh
            castShadow
            receiveShadow
            geometry={(nodes.back_side_build as Mesh).geometry}
            material={facadeFlr1}
            position={[-0.003, -25.458, 10.826]}
            scale={1.56}
          />
        </RigidBody>
        <RigidBody type="fixed" colliders="cuboid">
          <mesh
            castShadow
            receiveShadow
            geometry={(nodes.right_side_build as Mesh).geometry}
            material={facadeFlr1}
            position={[-0.003, -25.458, 10.826]}
            scale={1.56}
          />
        </RigidBody>
        <RigidBody type="fixed" colliders="cuboid">
          <mesh
            castShadow
            receiveShadow
            geometry={(nodes["top-side_build"] as Mesh).geometry}
            material={facadeFlr1}
            position={[-0.003, -25.458, 10.826]}
            scale={1.56}
          />
        </RigidBody>
      </group>
    </>
  );
}

useGLTF.preload(path);
