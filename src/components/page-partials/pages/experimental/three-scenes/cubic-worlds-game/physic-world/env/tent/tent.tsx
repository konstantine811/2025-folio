/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import { JSX, useMemo } from "react";
import { useGLTF } from "@react-three/drei";
import { publicModelPath } from "../../../config/3d-model.config";
import { Mesh, MeshStandardMaterial } from "three";
import { TentCollider } from "./tent-collider";
import ObstacleWrapper from "../../../nav-mesh/obstacle-wrapper";

type Props = JSX.IntrinsicElements["group"] & {};

const path = publicModelPath("tent.glb");

export function Tent({ ...props }: Props) {
  const { nodes, materials } = useGLTF(path);

  const tentMat = useMemo(() => {
    const m = (materials.tent as MeshStandardMaterial).clone();
    m.color.multiplyScalar(0.4); // 60% яскравості
    return m;
  }, [materials.tent]);
  return (
    <group {...props} dispose={null}>
      <TentCollider />
      <group
        position={[3.669, 0, -2.903]}
        rotation={[0.68, 1.175, -0.852]}
        scale={[0.019, 0.12, 0.019]}
      >
        <ObstacleWrapper>
          <mesh
            castShadow
            receiveShadow
            geometry={(nodes.Cube247 as Mesh).geometry}
            material={materials.wood}
          />
        </ObstacleWrapper>
        <ObstacleWrapper>
          <mesh
            castShadow
            receiveShadow
            geometry={(nodes.Cube247_1 as Mesh).geometry}
            material={materials.rope}
          />
        </ObstacleWrapper>
        <ObstacleWrapper>
          <mesh
            castShadow
            receiveShadow
            geometry={(nodes.Cube247_2 as Mesh).geometry}
            material={tentMat}
          />
        </ObstacleWrapper>
      </group>
    </group>
  );
}

useGLTF.preload(path);
