/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import { JSX } from "react";
import { useGLTF } from "@react-three/drei";
import { publicModelPath } from "../../../config/3d-model.config";
import { Mesh } from "three";
import { RigidBody } from "@react-three/rapier";

const path = publicModelPath("plants.glb");

type Props = JSX.IntrinsicElements["group"] & {};

export default function Plants(props: Props) {
  const { nodes, materials } = useGLTF(path);
  return (
    <group {...props} dispose={null}>
      <RigidBody
        type="dynamic"
        colliders="hull"
        lockRotations
        mass={10}
        friction={5}
        ccd
        restitution={0}
      >
        <group
          position={[-9.308, 1.236, 7.446]}
          rotation={[Math.PI, -1.571, 0]}
          scale={-0.127}
        >
          <mesh
            castShadow
            receiveShadow
            geometry={(nodes.Cube024 as Mesh).geometry}
            material={materials["Material.010"]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={(nodes.Cube024_1 as Mesh).geometry}
            material={materials["Material.008"]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={(nodes.Cube024_2 as Mesh).geometry}
            material={materials["Material.009"]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={(nodes.Cube024_3 as Mesh).geometry}
            material={materials["Material.072"]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={(nodes.Cube024_4 as Mesh).geometry}
            material={materials["Material.073"]}
          />
        </group>
      </RigidBody>
      <RigidBody
        type="dynamic"
        colliders="hull"
        lockRotations
        mass={40}
        friction={1}
        ccd
        restitution={0}
      >
        <group position={[-2.728, 1.209, 2.217]} rotation={[0, 1.153, 0]}>
          <mesh
            castShadow
            receiveShadow
            geometry={(nodes.Mesh041 as Mesh).geometry}
            material={materials["Material.073"]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={(nodes.Mesh041_1 as Mesh).geometry}
            material={materials["Material.074"]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={(nodes.Mesh041_2 as Mesh).geometry}
            material={materials["Material.075"]}
          />
        </group>
      </RigidBody>
      <RigidBody
        type="dynamic"
        lockRotations
        colliders="cuboid"
        ccd
        restitution={0}
      >
        <group
          position={[0.147, 0, 3.497]}
          rotation={[0, 0.066, 0]}
          scale={0.827}
        >
          <mesh
            castShadow
            receiveShadow
            geometry={(nodes.Mesh048 as Mesh).geometry}
            material={materials["Material.073"]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={(nodes.Mesh048_1 as Mesh).geometry}
            material={materials["Material.075"]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={(nodes.Mesh048_2 as Mesh).geometry}
            material={materials["Material.010"]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={(nodes.Mesh048_3 as Mesh).geometry}
            material={materials["Material.008"]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={(nodes.Mesh048_4 as Mesh).geometry}
            material={materials["Material.076"]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={(nodes.Mesh048_5 as Mesh).geometry}
            material={materials["Material.077"]}
          />
        </group>
      </RigidBody>
      <RigidBody
        type="dynamic"
        lockRotations
        colliders="cuboid"
        ccd
        restitution={0}
      >
        <group
          position={[0.338, 0, 6.391]}
          rotation={[0, 0.066, 0]}
          scale={0.827}
        >
          <mesh
            castShadow
            receiveShadow
            geometry={(nodes.Mesh001 as Mesh).geometry}
            material={materials["Material.073"]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={(nodes.Mesh001_1 as Mesh).geometry}
            material={materials["Material.075"]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={(nodes.Mesh001_2 as Mesh).geometry}
            material={materials["Material.010"]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={(nodes.Mesh001_3 as Mesh).geometry}
            material={materials["Material.008"]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={(nodes.Mesh001_4 as Mesh).geometry}
            material={materials["Material.076"]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={(nodes.Mesh001_5 as Mesh).geometry}
            material={materials["Material.077"]}
          />
        </group>
      </RigidBody>
    </group>
  );
}

useGLTF.preload(path);
