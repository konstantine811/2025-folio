{
  "welcome": "Welcome",
  "hello_user": "Hello, {{name}}!",
  "date_format": "D MMMM YYYY [at] HH:mm",
  "not_data": "No data available",
  "copy": "Copy",
  "copied": "Copied",
  "health": "Health",
  "finance": "Finance",
  "emotions": "Emotions",
  "relationships": "Relationships",
  "career": "Career",
  "spirituality": "Spirituality",
  "personal_growth": "Personal Growth",
  "hobbies": "Hobbies",
  "leisure": "Leisure",
  "pickDate": "Pick a date",
  "cubic_worlds_game": {
    "pause": {
      "title": "Pause",
      "description": "Game is paused. Press the button to continue.",
      "resume": "Resume"
    },
    "portfolio": {
      "title": "Press <span>F</span> to enter the Portfolio",
      "description": "Explore my projects and works.",
      "main_section": {
        "name": "Konstantin Abramkin",
        "description": "I create interactive 3D experiences on the web.",
        "scroll_down_text": "Scroll to explore the house ↓",
        "subtitle": "The beginning is always the moment of the finest balance. Every master of the web knows this. To study the path of the <b>Web Developer</b>, first place it in sequence: <mono>HTML</mono>, <mono>CSS</mono>, <mono>JavaScript</mono>. And then — build interactive worlds and three-dimensional stories. Place it in space: the Universe of the Web, where every line of code is like a detective trail, leading wherever your imagination takes you. And do not be deceived by the thought that your years have passed, or that school failed to teach you enough — just act. And then you discover true weapons: <tech>React</tech>, <tech>Node.js</tech>, and <tech>Three.js</tech>; the world of interactive maps with <tech>Mapbox</tech>; animations powered by <tech>Framer Motion</tech> or <tech>GSAP</tech>. And the modern Web reveals itself as a living world — one where the architect <em>is you</em>.",
        "start_text": {
          "1": "Привіт. Це мій сайт-портфоліо. Тут я хочу провести тебе стежкою, якою йшов сам — від дитячої любові до ігор до світу, де фантазія стає реальністю."
        },
        "role": {
          "1": "3D/GIS",
          "2": "Web Developer"
        },
        "skills": {
          "web_developer": "Web Developer",
          "react": "React",
          "maps": "Maps",
          "three_js": "Three.js",
          "webgl": "WebGL",
          "r3f": "R3F",
          "animations": "Animations",
          "gamedev": "GameDev"
        },
        "scroll_down": "Scroll Down"
      },
      "skills_section": {
        "title": "Skills",
        "3d": "<p>I have been doing 3D modeling for a long time — at first more as a hobby. Lately, however, I have immersed myself much deeper in study and practice to bring my ideas to life. In the CGBoost <em>Cubic Worlds</em> course and several Udemy lessons, I gained practical skills: environment modeling, basic shader creation, animation, character rigging, and much more.</p><p>Right now I feel that in this field almost nothing is impossible for me — all I need is time and a good idea.</p><p>On my blog, I’ve prepared full-length articles with step-by-step instructions for modeling <em>Cubic Worlds</em> — from the very first steps to building complete 3D scenes. You’re welcome to explore them here: <link>My Cubic Worlds blog</link>.</p>",
        "three_js": "<p>For over <em>4 years</em>, I have been deeply engaged in both the theory and practice of <strong>Three.js</strong>. The most valuable learning experiences came from the <a_simon>Simon Bruno – Journey to Three.js</a_simon> course and the unique materials by <a_sensei>WawaSensei</a_sensei> (both public on YouTube and private), which covered a wide range of techniques and approaches in creating 3D applications.</p><p>I also expanded my knowledge of low-level <strong>WebGL</strong> and experimented with shaders, which still feel somewhat magical to me. Another area of strong interest is working with physics: I have experience with <strong>Rapier</strong>, as well as <strong>Cannon.js</strong> and <strong>Ammo.js</strong>.</p><p>The biggest breakthrough for me was discovering <strong>React Three Fiber</strong> and <strong>React Drei</strong> — tools that significantly simplify building 3D scenes in <strong>React</strong> and enable fast experimentation. During this time, I have created many pet projects and experiments, and through practice I realized that what excites me the most is creating 3D environments and games.</p><p>I also explored <strong>Unity</strong> and <strong>Babylon.js</strong>, but my love for JavaScript and the ease of working with <strong>React Three Fiber</strong> always brought me back. I believe that web-based games and interactive 3D experiences still hold a tremendous future.</p> <a>Here you can also check out my latest <strong>Three.js</strong> examples.</a>",
        "three_js_examples": "Past projects hosted on other sites, not featured here",
        "backend_data": "<p>I’ve been working with <strong>Node.js</strong> practically since the start of my frontend career. I build lightweight backend services and <strong>APIs</strong>, and set up data storage and access across different databases—from document-oriented (<strong>MongoDB/JSON</strong>) to relational (<strong>SQL</strong>). Although backend isn’t my primary focus, I take on these tasks when there’s no one to delegate them to. On the frontend, I have strong hands-on experience with caching and offline mode: I actively use <strong>IndexedDB</strong> (in combination with <strong>service workers</strong>), enabling the application to work fully offline as long as synchronization is configured correctly. For state management, I have extensive experience with <strong>RxJS</strong> in <strong>Angular</strong> and <strong>Redux</strong> in both <strong>Angular</strong> and <strong>React</strong>; however, within the <strong>React</strong> ecosystem I prefer <strong>Zustand</strong> for its simplicity and because it’s sufficient for 100% of my use cases (<strong>Redux</strong> is used where it’s truly justified).</p>",
        "visual_data": "<p>I have extensive experience visualizing large datasets (<em>8,000+ records</em>) as interactive charts and tables. My primary tool is <strong>D3.js</strong>: I’ve implemented <em>synchronized multiple charts</em>, <em>zooming</em>, <em>tooltips/popups</em>, <em>custom icons</em>, <em>animations</em>, and <em>line</em> and <em>pie charts</em>. I’ve worked with other libraries as well, but I consider <strong>D3.js</strong> the best choice: it doesn’t lock you into a specific style and gives full freedom for features, though it can require more effort to implement.</p> <p>For tables, I primarily use <strong>AG Grid</strong>—<em>excellent documentation</em>, a <em>wide feature set</em>, <em>support for Angular/React/Vanilla JS/TS</em>, and easy <em>integration of custom components</em>. I’ve implemented <em>sorting</em>, <em>drag-and-drop</em>, and <em>custom filters</em>, among others. With <strong>AG Grid</strong>, I displayed data for about <em>8,000 fields</em> and <em>two-way synchronized selection and search with the map</em>—everything ran fast and reliably.</p>",
        "front_end": "<p>I’ve been “married” to <strong>JavaScript</strong> for nine years now—and I’ve never regretted the choice. Before that, I experimented with <strong>Java</strong>, <strong>PHP</strong>, <strong>C++</strong>, <strong>C#</strong>, and <strong>Python</strong>, but each time I ran into the feeling of being tied to a specific platform or set of features. <strong>JavaScript</strong> gave me what I was missing—freedom: at any moment I can change direction without a full reset—<em>Frontend</em>, <em>Backend</em>, <em>GameDev</em>, <em>ML/Machine Learning</em>, <em>Mobile</em>, <em>Desktop</em>, <em>Arduino/Robotics</em>.</p> <p>Yes, there are trade-offs—<strong>JS</strong> can trail compiled languages in performance—but the ecosystem rapidly covers most needs. That’s where <strong>TypeScript</strong>—my second professional “love”—has my back: it makes code transparent and predictable (the <em>any</em> type now appears only in nightmares), and scaling becomes much simpler.</p> <p>I’ve spent years working with <strong>Vue</strong>, <strong>Angular</strong>, and <strong>React</strong>; today my default choice is <strong>React</strong>. Paired with <strong>TypeScript</strong>, this stack lets me design reliable, scalable systems—from the <em>UI</em> to complex client-side logic and backend integrations.</p>",
        "ui": "<p>When I entered the web development world, the market was firmly dominated by <strong>Bootstrap</strong>. I never quite understood why: yes, before <em>flexbox</em> it offered a convenient grid system, but the design always felt outdated to me. On top of that, any deviation required adding “hacks,” since there was no flexible API at the time.</p> <p>Later, <strong>Material Design</strong> appeared — more visually appealing, but even harder to customize than <strong>Bootstrap</strong>.</p> <p>In recent years, <strong>Tailwind</strong> has emerged, and it’s exactly what was missing: it doesn’t impose a specific style, is fully customizable, well-optimized for bundling, and noticeably simplifies development. With <strong>Tailwind</strong>, I rarely write “pure” <em>CSS</em> anymore — most of my work is done with utility classes directly in the markup.</p> <p>On top of that, many UI libraries have been built around <strong>Tailwind</strong>; one of my favorites for its simplicity is <strong>shadcn/ui</strong>. Overall, I have <em>extensive experience</em> working with <strong>Bootstrap</strong>, <strong>Material</strong>, and <strong>Tailwind</strong>.</p>",
        "map": "<p>I have been working with <em>maps</em> professionally for <em>4–5 years</em>. My first real experience began at the company <em>Kernel</em>. At first, I didn’t even think I would enjoy this field so much, but after solving a few complex tasks related to calculating the overall geometry of multiple polygons (essentially the <em>convexHull</em> algorithm, which I didn’t even know about back then), I was completely hooked. I could ride the trolleybus and sketch algorithms on a fogged-up window, lost in thought. It was incredibly exciting.</p> <p>We worked with <strong>ArcGIS</strong>, since the company had been building solutions on that platform for many years, so there wasn’t much choice. Our main challenge was to display <em>8,000 fields</em> quickly and without delays. Essentially, we were creating something very similar to <em>Cropio</em>. After two years, when much had already been done, I managed to convince my colleagues to switch to <strong>Mapbox</strong>. It gave us the speed and interactivity we desperately needed. However, <strong>Mapbox</strong> lacked some of the <strong>ArcGIS</strong> features, such as <em>raster functions</em>, so my task was to combine both technologies. We succeeded brilliantly.</p> <p>Today, I have solid experience with both <strong>Mapbox</strong> and <strong>ArcGIS</strong>, though I personally prefer <strong>Mapbox</strong> for its simplicity and reliability. I have a strong understanding of <em>Mapbox expressions</em>, know how to integrate data from <strong>OpenStreetMap</strong> and <strong>ArcGIS</strong>, and how to add <em>3D objects</em> to the map.</p> <p>In my own pet projects, I rarely use maps — I don’t often come up with ideas for web apps involving them, and those experiments tend to remain rather superficial. But when I work with maps in real-world tasks, I get drawn in completely — just like in childhood, when I was absorbed by <em>Total War</em> games or books about explorers like <em>Francis Drake</em>, <em>James Cook</em>, or <em>Magellan</em>. When building maps, I feel like both a pirate and a discoverer.</p>",
        "map_content": {
          "title": "Some of My Map Projects",
          "population_project": "Project on Visualizing the Population of Ukraine",
          "3d_buildings_project": "Adding 3D Buildings to the Map"
        }
      },
      "experience": {
        "title": "Experience",
        "kernel": "<ul><h5>At <em>Kernel</em>, I worked for 5 years, where I built two full-fledged web applications from scratch:</h5><li>a global interactive map of all fields by clusters (over 8,000 polygons);</li><li>a detailed analytics system for a specific field.</li></ul> <ul><h5>In these projects we combined:</h5> <li><strong>Mapbox</strong> — for rendering geometry and interactive graphics;</li> <li><strong>ArcGIS</strong> — for working with raster data: <em>NDVI imagery</em>, <em>soil tiles</em>, <em>work-order tracks</em>.</li></ul> <ul><h5>The functionality covered:</h5><li> analytics for each field;</li> <li>polygon calculations and processing (including hand-drawn ones);</li> <li>comparison of key metrics;</li> <li>comprehensive agri-analytics tools for agronomists.</li></ul> <h5>Technologies: <strong>Angular 2+</strong>, <strong>D3.js</strong>, <strong>Turf.js</strong>, <strong>ArcGIS</strong>, <strong>Mapbox</strong>, <strong>AG Grid</strong>, <strong>Material UI</strong>.</h5> <side_line>Unfortunately, I cannot share any visuals or links because the project was an internal solution for company employees, and I signed a non-disclosure agreement (NDA). In short, it was a full-fledged alternative to Cropio: in some ways less large-scale, yet more innovative in certain aspects.</side_line>",
        "u_studio": "<p>I’ve been working at <em>Ustudio</em> for the past two years. I independently developed the frontend of an application from scratch to display destroyed and rebuilt assets during the war in Ukraine. Implemented a heat map of funding levels and needs, filters by asset types, analytical charts, and detailed cards for each asset. Tools used: <strong>React</strong>, <strong>Node.js</strong> (caching and data processing), <strong>Mapbox</strong>, <strong>Material UI</strong>, <strong>Tailwind CSS</strong>, <strong>Redux</strong>, <strong>D3.js</strong>, <strong>Framer Motion</strong>, <strong>IndexedDB</strong> (frontend caching). <a>Project link</a>.</p>",
        "ixlayer": "<ul><h5>At <em>ixlayer</em>, I worked remotely for over two years.</h5><li>Built websites with <strong>Vue.js</strong> for genetic DNA testing services.</li><li>Primary focus — <em>landing pages</em>, <em>registration forms</em>, and <em>questionnaires/forms</em>.</li></ul><h5>Technologies: <strong>Vue.js</strong>.</h5>",
        "computools": "<p>The first company where I began working as a web developer was <em>Computools</em>. My primary responsibilities included building interactive, animated websites using <strong>HTML</strong>, <strong>SCSS</strong>, <strong>JavaScript</strong>, and <strong>Bootstrap</strong>, as well as gaining my first hands-on experience with <strong>Angular 2</strong>.</p>"
      }
    }
  },
  "months": [
    "January",
    "February",
    "March",
    "April",
    "May",
    "June",
    "July",
    "August",
    "September",
    "October",
    "November",
    "December"
  ],
  "ranges": {
    "today": "Today",
    "yesterday": "Yesterday",
    "thisWeek": "This Week",
    "lastWeek": "Last Week",
    "last7Days": "Last 7 Days",
    "thisMonth": "This Month",
    "lastMonth": "Last Month",
    "thisYear": "This Year",
    "lastYear": "Last Year"
  },
  "pages": {
    "home": "Home",
    "blog": "Blog",
    "task-manager": "Task Manager",
    "experimental": "Experiments",
    "task": {
      "template": "Task Template",
      "daily": "Daily Tasks",
      "analytics": "Analytics"
    }
  },

  "login": {
    "to_google": "Login with Google",
    "out": "Logout",
    "switch": "Login to another account"
  },
  "blog": {
    "topics": {
      "all": "All Topics",
      "all_subtopics": "All Subtopics"
    },
    "subtopics": {
      "common": "Common"
    },
    "articles": {
      "on_this_page": "On this page"
    }
  },
  "chart": {
    "hours": "Hours",
    "days": "Days",
    "hour": "hr",
    "minute": "min",
    "count_chart_title": "Total Duration of Tasks Each Day",
    "period_count_category_title": "Total Duration of Categories for Period",
    "period_count_task_title": "Total Duration of Tasks for Period",
    "range_count_task_title": "Analytics of Time Spent on Tasks for Selected Period",
    "period": "Period",
    "category": "Categories",
    "task": "Tasks",
    "timeCount": "Duration",
    "task_day_count": "Tasks for Today",
    "pie_category_daily_time": "Task Completion Status by Categories",
    "done_tasks": "Completed Tasks",
    "undone_tasks": "Undone Tasks",
    "line_chart_type": {
      "title": "Line Chart Type",
      "linear": "Linear",
      "step": "Step",
      "smooth": "Smooth",
      "smooth_cardinal": "Smooth (Cardinal)",
      "monotone": "Monotone"
    }
  },
  "task_manager": {
    "add": "Add Task",
    "add_container": "Add category",
    "add_template_task": "Add Task Template for Today",
    "template_daily_task_title": "Daily Task Template",
    "daily_task_title": "Your Tasks for",
    "edit": "Edit Task",
    "category": "Category",
    "planned_tasks": "Planned Tasks",
    "template_task": "Task Templates",
    "new_task": "New Tasks",
    "delete": "Delete Task",
    "complete": "Complete Task",
    "drag_task_here": "Drag task here",

    "incomplete": "Incomplete Task",
    "completed": "Completed Tasks",
    "incomplete_tasks": "Incomplete Tasks",
    "no_tasks": "No tasks available",
    "task_name": "Task Name",
    "task_description": "Task Description",
    "calendar": {
      "header": {
        "title": "Move Goal",
        "description": "Set your daily activity goal."
      },
      "date_range": {
        "today": "Today",
        "yesterday": "Yesterday",
        "thisWeek": "This Week",
        "lastWeek": "Last Week",
        "last7Days": "Last 7 Days",
        "thisMonth": "This Month",
        "lastMonth": "Last Month",
        "thisYear": "This Year",
        "lastYear": "Last Year"
      }
    },
    "add_all_tasks": {
      "header": {
        "title": "All Tasks from Template",
        "description": "You can add all tasks from the template to your task list."
      }
    },
    "analytics": {
      "header": {
        "title": "Task Analytics",
        "description": "Here you can view statistics on assigned tasks."
      },
      "daily_table": {
        "indicator": "Indicator",
        "count": "Count",
        "time": "Time"
      },
      "header_range": {
        "title": "Task Analytics for Period",
        "description": "Select the period for which you want to view task statistics."
      },
      "range_table": {
        "task": "Task",
        "done": "Done",
        "not_done": "Not Done",
        "total_time": "Total Time",
        "done_time": "Done Time",
        "sort_by_done_time": "Sort by Done Time",
        "sort_by_done_count": "Sort by Done Count"
      }
    },
    "day_names": {
      "1": "Mon",
      "2": "Tue",
      "3": "Wed",
      "4": "Thu",
      "5": "Fri",
      "6": "Sat",
      "7": "Sun",
      "all": "Common Tasks",
      "by_all_week": "By All Days of the Week"
    },
    "dialog_category": {
      "delete": {
        "title": "Delete Category",
        "description": "Are you sure you want to delete this category? All tasks in it will be deleted.",
        "yes": "Yes, delete",
        "no": "No, leave it"
      }
    },
    "dialog_delete_task": {
      "title": "Delete Task",
      "description": "Are you sure you want to delete this task? This action cannot be undone.",
      "yes": "Yes, delete",
      "no": "No, leave it"
    },
    "dialog_create_task": {
      "task": {
        "title": {
          "label": "Task Title",
          "description": "Briefly describe what you want to do."
        },

        "time": {
          "determined": {
            "label": "Planned for",
            "description": "Specify the exact time you want to complete this task."
          },
          "duration": {
            "label": "Expected Duration",
            "description": "How long do you expect this task to take (e.g., 1 hour 30 minutes)"
          },
          "wasted": {
            "label": "Wasted Time",
            "description": "How much time was actually spent on execution (e.g., 45 minutes)"
          },
          "label": "Planned Time",
          "wasted_time": "Wasted Time",
          "remaining_time": "Remaining Time",
          "when_day": "When to do?",
          "hours": "Hours",
          "minutes": "Minutes",
          "is_determined_task": "At a specific time",
          "on_time": "At this hour",
          "count_time": "How much time do you need?",
          "description": "How much time do you want to dedicate to this task?"
        },
        "priority": {
          "label": "Priority",
          "description": "How important is this task for today?",
          "options": {
            "low": "Low",
            "medium": "Medium",
            "high": "High"
          }
        }
      },
      "1": {
        "title": "New Task",
        "description": "Formulate your intention for the day. A small step — a big impact."
      },
      "2": {
        "title": "Plan What Matters",
        "description": "Add a task that helps you focus, stay balanced, and move toward your goals."
      },
      "3": {
        "title": "Create Task",
        "description": "Specify the title, priority, and desired completion time. This will help organize your day better."
      },
      "4": {
        "title": "Main Action of the Day",
        "description": "What truly matters today? Describe it clearly and briefly."
      }
    }
  }
}
